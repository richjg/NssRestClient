using System;
using System.Collections.Generic;
using System.Text;
using Newtonsoft.Json;

namespace NssRestClient.Dto
{
    public class ApiActivity
    {
        /// <summary>
        /// Id of the activity.
        /// </summary>
        public int Id { get; set; }

        /// <summary>
        /// Type of the activity.
        /// </summary>
        public string Type { get; set; }
        /// <summary>
        /// DateTime in UTC that activity was created.
        /// </summary>
        public System.DateTime CreatedDateTime { get; set; }
        /// <summary>
        /// DateTime in UTC that activity was last updated.
        /// </summary>
        public System.DateTime UpdatedDateTime { get; set; }

        /// <summary>
        /// Json data associated with the activity.
        /// This data is untyped and varies between activity types.
        /// </summary>
        public string Data { get; set; }

        /// <summary>
        /// Status of the activity
        /// </summary>
        public string Status { get; set; }

        /// <summary>
        /// If the activity has recorded an error, this field contains the exception which was generated.
        /// </summary>
        public string Exception { get; set; }

        /// <summary>
        /// States whether the activity is generated by a scheduled task.
        /// </summary>
        public bool IsScheduled { get; set; }

        /// <summary>
        /// Guid  of the Front Office task, which caused the generation of this activity.
        /// </summary>
        public string FrontOfficeTrackingId { get; set; }

        /// <summary>
        /// The type of entity that this activity is associated with.
        /// </summary>
        public string EntityType { get; set; }

        /// <summary>
        /// The Id of the entity that this activity is associated with.
        /// </summary>
        public int EntityKey { get; set; }

        /// <summary>
        /// Customer code of the tenant that this activity is associated with.
        /// </summary>
        public string CustomerCode { get; set; }

        /// <summary>
        /// If this activity fails and then a later activity comes along doing the same job, then the later activity will supersede this activity.
        /// If this activity has been superseded by another activity, then this property is set.
        /// </summary>
        public int? SupersededBy { get; set; }

        /// <summary>
        /// The Id of a related activity that continues following this activity.
        /// </summary>
        public string ActivityContinuation { get; set; }

        /// <summary>
        /// The ids of related activities that continue following this activity.
        /// </summary>
        public IEnumerable<int> ContinuationIds { get; set; }
    }
}
